# Configurations for IBM BlueGene systems
#   using IBM XL compilers

# 2DECOMP&FFT options
#====================

# Choose pre-processing options
#   -DDOUBLE_PREC - use double-precision (default single)
#   -DEVEN        - for evenly distributed data, use ALLTOALL
#   -DOVERWRITE   - allow FFT input to be overwritten (save memory)
OPTION=-DDOUBLE_PREC -DOVERWRITE

# Choose one FFT engine, available options are:
#   essl       - IBM Engineering and Scientific Subroutine Library
#   fftw3      - FFTW version 3.x
#   fftw3_f03  - FFTW 3.3-beta1 or later (with Fortran 2003 interface)
#   generic    - A general FFT algorithm (no 3rd-party library needed)
FFT=generic

# Platform-dependent information
#===============================

# special syntax for IBM XL compiler's preprocessing
# instead of using "-DTAG1 -DTAG2", XL needs "-WF,-DTAG1 -WF,-DTAG2"
from:=-D
to:=-WF,-D
TMP=$(subst $(from),$(to),$(OPTION))
OPTIONS=$(TMP)

# The path of the base BlueGene system software
BGP_SYS=/bgsys/drivers/V1R4M1_460_2009-091110P/ppc/comm/xl

# Inlcude path
INC=

#----------------------- Fortran Compiler ----------------------------
F90=$(BGP_SYS)/bin/mpixlf90_r

# enable preprocessing
CPPFLAGS=-qsuffix=cpp=f90

# enable Cray pointer support if needed
CRAYPTR=

# optimisation or debugging flags
OPTIM=-O3 -qarch=450d -qtune=450

F90FLAGS=$(OPTIM) $(CRAYPTR) $(CPPFLAGS) $(INC)
LDFLAGS=$(OPTIM)

#--------------------------C Compiler---------------------------------
CC=mpixlc_r
CFLAGS=-O3

#-----------------------External Library------------------------------

# for FFTW
LIB_FFTW3=-lfftw3f -lfftw3 -L  # supply path to FFTW3 here 

# for ESSL
LIB_ESSL=-L$(BGP_SYS)/lib -L/opt/ibmmath/lib -lesslbg

ifeq ($(FFT),generic)
     LIBFFT=
else ifeq ($(FFT),fftw3)
     LIBFFT=$(LIB_FFTW3)
else ifeq ($(FFT),fftw3_f03)
     LIBFFT=$(LIB_FFTW3)
else ifeq ($(FFT),essl)
     LIBFFT=$(LIB_ESSL)
endif
