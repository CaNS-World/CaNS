name: run-one

on:
  workflow_call:
    inputs:
      compiler:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        mode:
          - name: opt
            flags: "FFLAGS_OPT=1"
          - name: dbg
            flags: "FFLAGS_DEBUG_MAX=1 FFLAGS_OPT=0"
      fail-fast: false # ensures that jobs run in parallel
    name: build-${{ matrix.mode.name }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: Set up the environment and get packages
      uses: ./.github/actions/build
      with:
        name: ${{ inputs.compiler }}-${{ matrix.mode.name }}
        compiler: ${{ inputs.compiler }}
        compiler_flags: ${{ matrix.mode.flags }}
        no-rebuild: false
        
  test:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        mode:
          - name: opt
            flags: "FFLAGS_OPT=1"
          - name: dbg
            flags: "FFLAGS_DEBUG_MAX=1 FFLAGS_OPT=0"
        test-name: [lid_driven_cavity]
      fail-fast: false # ensures that jobs run in parallel
    name: test-${{ matrix.mode.name }}-${{ matrix.test-name }}
    steps:
    - name: Skip some combinations
      run: |
        if [[ "${{ matrix.mode.name }}" == "opt" && "${{ inputs.compiler }}" == "INTEL" ]];
        then
        echo "SKIPPED=true" >> $GITHUB_ENV
        echo "INFO: Skipping the "${{ inputs.compiler }}" with mode "${{ matrix.mode.name }}
        else
        echo "SKIPPED=false" >> $GITHUB_ENV
        fi
    - name: Checkout code
      if: ${{ env.SKIPPED != 'true'}}
      uses: actions/checkout@v4
      with:
        submodules: false
    - name: Set up the environment and get packages
      if: ${{ env.SKIPPED != 'true'}}
      uses: ./.github/actions/build
      with:
        name: ${{ inputs.compiler }}-${{ matrix.mode.name }}
        compiler: ${{ inputs.compiler }}
        compiler_flags: ${{ matrix.mode.flags }}
        no-reuild: true
    - name: Get Python
      if: ${{ env.SKIPPED != 'true'}}
      uses: actions/setup-python@v2
      with:
        python-version: 3.13
    - name: Get Python packages for testing
      if: ${{ env.SKIPPED != 'true'}}
      shell: bash  # Specify the shell explicitly
      run: |
        python -m pip install --upgrade pip
        pip install numpy pytest
    - name: Run the test
      if: ${{ env.SKIPPED != 'true'}}
      shell: bash  # Specify the shell explicitly
      run: |
           cd tests/${{ matrix.test-name }}
           sh ./testit.sh
    - name: Upload log files
      if: ${{ env.SKIPPED != 'true'}}
      uses: actions/upload-artifact@v4
      with:
        name: logs-${{ inputs.compiler }}-${{ matrix.mode.name }}-${{ matrix.test-name }}
        path: run/*log 
    - name: Print log(s)
      if: ${{ env.SKIPPED != 'true'}}
      shell: bash  # Specify the shell explicitly
      run: |
           for f in $(ls run/*log)
           do
             echo "Printing log file $f"
             cat $f
           done
